{"id":"script.js","dependencies":[{"name":"/home/cisco/Рабочий стол/ReactGallery/package.json","includedInParent":true,"mtime":1600241577451},{"name":"LoginForm","loc":{"line":1,"column":22},"parent":"/home/cisco/Рабочий стол/ReactGallery/script.js","resolved":"/home/cisco/Рабочий стол/ReactGallery/node_modules/LoginForm/index.js"}],"generated":{"js":"\"use strict\";\n\nvar _LoginForm = _interopRequireDefault(require(\"LoginForm\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"script.js","original":{"line":1,"column":0}}],"sources":{"script.js":"import LoginForm from 'LoginForm'\n\n\n/*\nЗадача:\n0. Пробежаться по коду с комментариями. Жмакнуть кнопку-ошибку, посмотреть в консоль как меняются css-классы у формы и как часто происходит перерендер.\n1. Делаем пустой новый yarn проект ReactGallery с index.html, index.js, style.css\n2. Добавляем библитеку parcel\n3. Для быстрозапуска в package.json добавим скрипт\n\n\"scripts\": {\"start\": \"yarn parcel serve index.html\"}\n\nЗапускаются скрипты с консоли yarn run название_скрипта\n\n4. Импортируем компонент <LoginForm/> такой же как тут в кодпене из репозитория. С Parcel можно импортиртировать любой репозиторий, где есть js-файлы с командой exports внутри. \n\nyarn add https://github.com/vaduga/LoginForm.git\n\n5. Подсматривая как организован пакет LoginForm, прикручиваем React и создаем свой компонент <App/> который рендерит примерно так:\n\nrender() {\nreturn (\n<>\n<LoginForm/>\n<Gallery/>\n</>)\n}\n\n6. Делаем компонент Gallery, который хранит у себя в объекте state массив ссылок на картинки\n\nРендерим список картинок по ссылкам из state. \nКак рендерить список? Смотреть документацию React, вспомнить про функции высшего порядка map\nhttps://ru.reactjs.org/docs/lists-and-keys.html\n\n*/"},"lineCount":null}},"error":null,"hash":"213c62e4def1a1c1bc8527fd40ca5a30","cacheData":{"env":{}}}